{"ast":null,"code":"var _jsxFileName = \"D:\\\\ElifTechTask\\\\client\\\\src\\\\Components\\\\BankPage\\\\EditBank.jsx\",\n    _s = $RefreshSig$();\n\nimport Axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport s from \"./EditBank.module.scss\";\nimport EditData from \"./EditData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditBank = props => {\n  _s();\n\n  const [banks, setBanks] = useState([]);\n  const [dataBank, setData] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    Axios.get(\"http://localhost:3001/bank\").then(Response => {\n      if (Response.status === 200) {\n        setBanks(Response.data);\n      } else {\n        setMessage(\"Error, something went wrong\");\n      }\n    }, err => {\n      setMessage(\"Error, something went wrong\");\n    });\n  }, []);\n\n  function changeSelect() {\n    let but = document.getElementById(\"SelectBut\");\n    let editData = document.getElementById(\"EditData\");\n    editData.style.display = \"none\";\n    but.style.display = \"block\";\n  }\n\n  function selectBank(e) {\n    let selectBank = document.getElementById(\"Select\");\n\n    if (selectBank.value !== \"None\") {\n      let strBank = selectBank.value.substring(3);\n      let arrBank = strBank.split(\" \");\n      let editData = document.getElementById(\"EditData\");\n      Axios.get(\"http://localhost:3001/bank/\" + arrBank[0]).then(Response => {\n        if (Response.status === 200) {\n          setData(Response.data);\n          setMessage(\"\");\n          e.target.style.display = \"none\";\n          editData.style.display = \"block\";\n        } else {\n          setMessage(\"Error, something went wrong\");\n        }\n      }, err => {\n        setMessage(\"Error, something went wrong\");\n      });\n    } else {\n      setMessage(\"Please, select the bank\");\n    }\n  }\n\n  let selectData = dataBank.map(p => /*#__PURE__*/_jsxDEV(EditData, {\n    Id: p.Id,\n    name: p.name,\n    interest_rate: p.interest_rate,\n    max_loan: p.max_loan,\n    min_down_payment: p.min_down_payment,\n    loan_term: p.loan_term\n  }, p.Id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this));\n  let bank = [];\n\n  if (banks.length > 0) {\n    bank = banks.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n      children: [\"ID:\", p.Id, \" \", p.name]\n    }, p.Id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this));\n  } else {\n    bank.push( /*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"No available banks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.EditBank,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.EditBankBlock,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.EditTitle,\n        children: \"Edit Bank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: s.EditBankElements,\n        id: \"Select\",\n        onChange: changeSelect,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"None\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), bank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: s.EditSelectBut,\n        onClick: selectBank,\n        id: \"SelectBut\",\n        children: \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.EditBankData,\n        id: \"EditData\",\n        children: selectData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.Message1,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditBank, \"P4DSV0UrAF3idlKdH3qHLBzNDq4=\");\n\n_c = EditBank;\nexport default EditBank;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditBank\");","map":{"version":3,"sources":["D:/ElifTechTask/client/src/Components/BankPage/EditBank.jsx"],"names":["Axios","React","useState","useEffect","s","EditData","EditBank","props","banks","setBanks","dataBank","setData","message","setMessage","get","then","Response","status","data","err","changeSelect","but","document","getElementById","editData","style","display","selectBank","e","value","strBank","substring","arrBank","split","target","selectData","map","p","Id","name","interest_rate","max_loan","min_down_payment","loan_term","bank","length","push","EditBankBlock","EditTitle","EditBankElements","EditSelectBut","EditBankData","Message1"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport s from \"./EditBank.module.scss\";\r\nimport EditData from \"./EditData\";\r\nconst EditBank = (props) => {\r\n  const [banks, setBanks] = useState([]);\r\n  const [dataBank, setData] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/bank\").then(\r\n      (Response) => {\r\n        if (Response.status === 200) {\r\n          setBanks(Response.data);\r\n        } else {\r\n          setMessage(\"Error, something went wrong\");\r\n        }\r\n      },\r\n      (err) => {\r\n        setMessage(\"Error, something went wrong\");\r\n      }\r\n    );\r\n  }, []);\r\n  function changeSelect() {\r\n    let but = document.getElementById(\"SelectBut\");\r\n    let editData = document.getElementById(\"EditData\");\r\n    editData.style.display = \"none\";\r\n    but.style.display = \"block\";\r\n  }\r\n  function selectBank(e) {\r\n    let selectBank = document.getElementById(\"Select\");\r\n    if (selectBank.value !== \"None\") {\r\n      let strBank = selectBank.value.substring(3);\r\n      let arrBank = strBank.split(\" \");\r\n      let editData = document.getElementById(\"EditData\");\r\n      Axios.get(\"http://localhost:3001/bank/\" + arrBank[0]).then(\r\n        (Response) => {\r\n          if (Response.status === 200) {\r\n            setData(Response.data);\r\n            setMessage(\"\");\r\n            e.target.style.display = \"none\";\r\n            editData.style.display = \"block\";\r\n          } else {\r\n            setMessage(\"Error, something went wrong\");\r\n          }\r\n        },\r\n        (err) => {\r\n          setMessage(\"Error, something went wrong\");\r\n        }\r\n      );\r\n    } else {\r\n      setMessage(\"Please, select the bank\");\r\n    }\r\n  }\r\n\r\n  let selectData = dataBank.map((p) => (\r\n    <EditData\r\n      key={p.Id}\r\n      Id={p.Id}\r\n      name={p.name}\r\n      interest_rate={p.interest_rate}\r\n      max_loan={p.max_loan}\r\n      min_down_payment={p.min_down_payment}\r\n      loan_term={p.loan_term}\r\n    />\r\n  ));\r\n\r\n  let bank = [];\r\n  if (banks.length > 0) {\r\n    bank = banks.map((p) => (\r\n      <option key={p.Id}>\r\n        ID:{p.Id} {p.name}\r\n      </option>\r\n    ));\r\n  } else {\r\n    bank.push(<option>No available banks</option>);\r\n  }\r\n  return (\r\n    <div className={s.EditBank}>\r\n      <div className={s.EditBankBlock}>\r\n        <div className={s.EditTitle}>Edit Bank</div>\r\n        <select\r\n          className={s.EditBankElements}\r\n          id=\"Select\"\r\n          onChange={changeSelect}\r\n        >\r\n          <option>None</option>\r\n          {bank}\r\n        </select>\r\n        <button className={s.EditSelectBut} onClick={selectBank} id=\"SelectBut\">\r\n          Select\r\n        </button>\r\n        <div className={s.EditBankData} id=\"EditData\">\r\n          {selectData}\r\n        </div>\r\n        <div className={s.Message1}>{message}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default EditBank;\r\n"]},"metadata":{},"sourceType":"module"}