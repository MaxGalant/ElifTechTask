{"ast":null,"code":"var _jsxFileName = \"D:\\\\ElifTechTask\\\\client\\\\src\\\\Components\\\\MortgagePage\\\\Mortgage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport s from \"./Mortgage.module.scss\";\nimport Axios from \"axios\";\nimport Table from \"./Table\";\nimport RefArrow from \"../Addition/RefArrow\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Mortgage = props => {\n  _s();\n\n  const [initialLoan, setInitialLoan] = useState(0);\n  const [downPayment, setDownPayments] = useState(0);\n  const [banks, setBanks] = useState([]);\n  const [dataBank, setData] = useState([]);\n  const [result, setResult] = useState(0);\n  const [month, setMonth] = useState(0);\n  const [rentYear, SetRent] = useState(0);\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    Axios.get(\"https://elif-tech-task.herokuapp.com/bank\").then(Response => {\n      setBanks(Response.data);\n    });\n  }, []);\n\n  function getSelected(e) {\n    let selectBank = document.getElementById(\"Select\");\n\n    if (selectBank.value !== \"None\") {\n      let strBank = selectBank.value.substring(3);\n      let arrBank = strBank.split(\" \");\n      Axios.get(\"http://localhost:3001/bank/\" + arrBank[0]).then(Response => {\n        if (Response.status === 200) {\n          setData(Response.data);\n          setMonth(Response.data[0].loan_term);\n          SetRent(Response.data[0].min_down_payment / 100);\n        } else {\n          setMessage(\"Error, something went wrong\");\n        }\n      }, err => {\n        setMessage(\"Error, something went wrong\");\n      });\n    }\n  }\n\n  function calculateMotgage() {\n    let table = document.getElementById(\"Table\");\n    let result = document.getElementById(\"Result\");\n    let selectBank = document.getElementById(\"Select\");\n    let rent = initialLoan * dataBank[0].min_down_payment / 100;\n\n    if (selectBank.value !== \"None\") {\n      if (!isNaN(Number(initialLoan))) {\n        if (Number(initialLoan) > 0) {\n          if (initialLoan > downPayment) {\n            if (downPayment >= rent) {\n              if (initialLoan <= dataBank[0].max_loan) {\n                let interestRate = dataBank[0].interest_rate / 100;\n                let amountBorroved = initialLoan - downPayment;\n                let p1 = amountBorroved * (interestRate / 12);\n                let p2 = (1 + interestRate / 12) ** dataBank[0].loan_term;\n                let mouthlyPayment = p1 * p2 / (p2 - 1);\n                result.parentElement.style.display = \"block\";\n                result.innerHTML = \" \" + mouthlyPayment.toFixed(2);\n                table.style.display = \"block\";\n                setMessage(\"\");\n                setResult(mouthlyPayment.toFixed(2));\n              } else {\n                result.parentElement.style.display = \"none\";\n                setMessage(\"Initial loan exceeds the allowable\");\n              }\n            } else {\n              result.parentElement.style.display = \"none\";\n              setMessage(\"Down payment must be more\");\n            }\n          } else {\n            result.parentElement.style.display = \"none\";\n            setMessage(\"Initial must be more than dawn payment\");\n          }\n        } else {\n          result.parentElement.style.display = \"none\";\n          setMessage(\"Initial loan must be more than 0\");\n        }\n      } else {\n        result.parentElement.style.display = \"none\";\n        setMessage(\"Initial loan must be a number\");\n      }\n    } else {\n      result.parentElement.style.display = \"none\";\n      setMessage(\"Please, select a bank\");\n    }\n  }\n\n  let bank = banks.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n    children: [\"ID:\", p.Id, \" \", p.name]\n  }, p.Id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this));\n\n  function getInitialLoan(e) {\n    setInitialLoan(Number(e.target.value));\n  }\n\n  function getDownPayments(e) {\n    setDownPayments(Number(e.target.value));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.Mortgage,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.Header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.MortgageBlock,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.MortgageBlockTitle,\n        children: \"Mortgage Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.MortgageBlockCalculator,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.MortgageBlockCalculatorInputs,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: s.MortgageBlockCalInitial,\n            onChange: getInitialLoan\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: s.MortgageBlockCalDownPayment,\n            onChange: getDownPayments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"\",\n            id: \"\",\n            className: s.MortgageBlockCalBank,\n            id: \"Select\",\n            onChange: getSelected,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), bank]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: s.MortgageBlockCalBut,\n          onClick: calculateMotgage,\n          children: \"Calculate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.ResultBlock,\n          children: [\" \", \"Result:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: s.Result,\n            id: \"Result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.Message,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.Table,\n      id: \"Table\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        rent: rentYear,\n        initialLoan: initialLoan,\n        result: result,\n        month: month,\n        downPayment: downPayment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.RefArrowBlock,\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/bank\",\n        children: /*#__PURE__*/_jsxDEV(RefArrow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Mortgage, \"WmFvE0T01NCOjXrPuI7q7A99AXo=\");\n\n_c = Mortgage;\nexport default Mortgage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mortgage\");","map":{"version":3,"sources":["D:/ElifTechTask/client/src/Components/MortgagePage/Mortgage.jsx"],"names":["React","useEffect","useState","s","Axios","Table","RefArrow","NavLink","Mortgage","props","initialLoan","setInitialLoan","downPayment","setDownPayments","banks","setBanks","dataBank","setData","result","setResult","month","setMonth","rentYear","SetRent","message","setMessage","get","then","Response","data","getSelected","e","selectBank","document","getElementById","value","strBank","substring","arrBank","split","status","loan_term","min_down_payment","err","calculateMotgage","table","rent","isNaN","Number","max_loan","interestRate","interest_rate","amountBorroved","p1","p2","mouthlyPayment","parentElement","style","display","innerHTML","toFixed","bank","map","p","Id","name","getInitialLoan","target","getDownPayments","Header","MortgageBlock","MortgageBlockTitle","MortgageBlockCalculator","MortgageBlockCalculatorInputs","MortgageBlockCalInitial","MortgageBlockCalDownPayment","MortgageBlockCalBank","MortgageBlockCalBut","ResultBlock","Result","Message","RefArrowBlock"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport s from \"./Mortgage.module.scss\";\r\nimport Axios from \"axios\";\r\nimport Table from \"./Table\";\r\nimport RefArrow from \"../Addition/RefArrow\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst Mortgage = (props) => {\r\n  const [initialLoan, setInitialLoan] = useState(0);\r\n  const [downPayment, setDownPayments] = useState(0);\r\n  const [banks, setBanks] = useState([]);\r\n  const [dataBank, setData] = useState([]);\r\n  const [result, setResult] = useState(0);\r\n  const [month, setMonth] = useState(0);\r\n  const [rentYear, SetRent] = useState(0);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://elif-tech-task.herokuapp.com/bank\").then((Response) => {\r\n      setBanks(Response.data);\r\n    });\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n  function getSelected(e) {\r\n    let selectBank = document.getElementById(\"Select\");\r\n    if (selectBank.value !== \"None\") {\r\n      let strBank = selectBank.value.substring(3);\r\n      let arrBank = strBank.split(\" \");\r\n      Axios.get(\"http://localhost:3001/bank/\" + arrBank[0]).then(\r\n        (Response) => {\r\n          if (Response.status === 200) {\r\n            setData(Response.data);\r\n            setMonth(Response.data[0].loan_term);\r\n            SetRent(Response.data[0].min_down_payment / 100);\r\n          } else {\r\n            setMessage(\"Error, something went wrong\");\r\n          }\r\n        },\r\n        (err) => {\r\n          setMessage(\"Error, something went wrong\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n \r\n  function calculateMotgage() {\r\n    let table = document.getElementById(\"Table\");\r\n    let result = document.getElementById(\"Result\");\r\n    let selectBank = document.getElementById(\"Select\");\r\n    let rent = (initialLoan * dataBank[0].min_down_payment) / 100;\r\n\r\n    if (selectBank.value !== \"None\") {\r\n      if (!isNaN(Number(initialLoan))) {\r\n        if (Number(initialLoan) > 0) {\r\n          if (initialLoan > downPayment) {\r\n            if (downPayment >= rent) {\r\n              if (initialLoan <= dataBank[0].max_loan) {\r\n                let interestRate = dataBank[0].interest_rate / 100;\r\n                let amountBorroved = initialLoan - downPayment;\r\n                let p1 = amountBorroved * (interestRate / 12);\r\n                let p2 = (1 + interestRate / 12) ** dataBank[0].loan_term;\r\n                let mouthlyPayment = (p1 * p2) / (p2 - 1);\r\n                result.parentElement.style.display = \"block\";\r\n                result.innerHTML = \" \" + mouthlyPayment.toFixed(2);\r\n                table.style.display = \"block\";\r\n                setMessage(\"\");\r\n                setResult(mouthlyPayment.toFixed(2));\r\n              } else {\r\n                result.parentElement.style.display = \"none\";\r\n                setMessage(\"Initial loan exceeds the allowable\");\r\n              }\r\n            } else {\r\n              result.parentElement.style.display = \"none\";\r\n              setMessage(\"Down payment must be more\");\r\n            }\r\n          } else {\r\n            result.parentElement.style.display = \"none\";\r\n            setMessage(\"Initial must be more than dawn payment\");\r\n          }\r\n        } else {\r\n          result.parentElement.style.display = \"none\";\r\n          setMessage(\"Initial loan must be more than 0\");\r\n        }\r\n      } else {\r\n        result.parentElement.style.display = \"none\";\r\n        setMessage(\"Initial loan must be a number\");\r\n      }\r\n    } else {\r\n      result.parentElement.style.display = \"none\";\r\n      setMessage(\"Please, select a bank\");\r\n    }\r\n  }\r\n  let bank = banks.map((p) => (\r\n    <option key={p.Id}>\r\n      ID:{p.Id} {p.name}\r\n    </option>\r\n  ));\r\n  function getInitialLoan(e) {\r\n    setInitialLoan(Number(e.target.value));\r\n  }\r\n  function getDownPayments(e) {\r\n    setDownPayments(Number(e.target.value));\r\n  }\r\n  return (\r\n    <div className={s.Mortgage}>\r\n      <div className={s.Header}></div>\r\n      <div className={s.MortgageBlock}>\r\n        <div className={s.MortgageBlockTitle}>Mortgage Calculator</div>\r\n        <div className={s.MortgageBlockCalculator}>\r\n          <div className={s.MortgageBlockCalculatorInputs}>\r\n            <input\r\n              type=\"text\"\r\n              className={s.MortgageBlockCalInitial}\r\n              onChange={getInitialLoan}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className={s.MortgageBlockCalDownPayment}\r\n              onChange={getDownPayments}\r\n            />\r\n            <select\r\n              name=\"\"\r\n              id=\"\"\r\n              className={s.MortgageBlockCalBank}\r\n              id=\"Select\"\r\n              onChange={getSelected}\r\n            >\r\n              <option>None</option>\r\n              {bank}\r\n            </select>\r\n          </div>\r\n          <button className={s.MortgageBlockCalBut} onClick={calculateMotgage}>\r\n            Calculate\r\n          </button>\r\n          <div className={s.ResultBlock}>\r\n            {\" \"}\r\n            Result:\r\n            <span className={s.Result} id=\"Result\"></span>\r\n          </div>\r\n        </div>\r\n        <div className={s.Message}>{message}</div>\r\n      </div>\r\n      <div className={s.Table} id=\"Table\">\r\n        <Table\r\n          rent={rentYear}\r\n          initialLoan={initialLoan}\r\n          result={result}\r\n          month={month}\r\n          downPayment={downPayment}\r\n        />\r\n      </div>{\" \"}\r\n      <div className={s.RefArrowBlock}>\r\n        <NavLink to=\"/bank\">\r\n          <RefArrow />\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Mortgage;\r\n"]},"metadata":{},"sourceType":"module"}